---
import Layout from "@layouts/SearchLayout.astro";
import { grpcClient } from "@utils/grpc/client";
import { promise } from "@utils/grpc/promise";
import { includeToken } from "@utils/grpc/token";
import { GetBookByIdRequest } from "grpc-ts/eshop_pb";

export type Params = {
  id: string;
};

const { id } = Astro.params as Params;

const request = new GetBookByIdRequest();
request.setId(id)

const getBook = promise(
  grpcClient.getBookById.bind(grpcClient),
  includeToken(Astro.cookies.get("token").value)
);
const book = (await getBook(request)) ;
const playerUrl = Astro.url.toString().replace("product", "player");

---

<Layout>
  <div class="w-full flex flex-wrap justify-center px-10 gap-5 my-20">
      <div class="max-w-xs">
        <h2 class="mb-4 text-4xl font-bold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white"
        >{book?.getName()}</h2>
        <p class="mb-4 text-xl font-bold leading-none tracking-tight text-gray-900 dark:text-white"
        >
          {book?.getAuthorsList().map(a => a.getName()).join(", ")}
        </p>
        <img class="mx-auto mt-10 h-auto max-w-xl rounded-lg shadow-xl dark:shadow-gray-800"
        src={book?.getCoverUrl()}>
      </div>
      <div class="max-w-xs flex flex-col justify-between gap-10">
        <div>
          {book?.getDescription()}
        </div>
        <a
        href={book?.getIsOwned() ? playerUrl : `/api/purchase/${book?.getId()}`}
        class:list={[
          "text-white focus:ring-4 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 text-center",
          book?.getIsOwned()
            ? "bg-green-700 hover:bg-green-800 focus:ring-green-300 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800"
            : "bg-blue-700 hover:bg-blue-800 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800",
        ]}>{book?.getIsOwned() ? "Open" : "Purchase"}</a
      >
      </div>
  </div>
</Layout>